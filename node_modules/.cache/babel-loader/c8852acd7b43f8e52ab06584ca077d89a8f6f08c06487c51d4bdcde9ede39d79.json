{"ast":null,"code":"var _jsxFileName = \"/Users/ashishmaurya/Downloads/reactjs-Fullcalendar-main/src/App.js\",\n  _s = $RefreshSig$();\nimport { Calendar } from '@fullcalendar/core';\nimport { Eventcalendar, getJson, setOptions, Toast } from '@mobiscroll/react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nsetOptions({\n  theme: 'ios',\n  themeVariant: 'light'\n});\nfunction App() {\n  _s();\n  const [myEvents, setEvents] = useState([]);\n  const [isToastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState();\n  const myView = useMemo(() => ({\n    calendar: {\n      type: 'month'\n    },\n    agenda: {\n      type: 'month'\n    }\n  }), []);\n  const handleToastClose = useCallback(() => {\n    setToastOpen(false);\n  }, []);\n  const handleEventClick = useCallback(args => {\n    setToastMessage(args.event.title);\n    setToastOpen(true);\n  }, []);\n  useEffect(() => {\n    getJson('https://trial.mobiscroll.com/events/?vers=5', events => {\n      setEvents(events);\n    }, 'jsonp');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Eventcalendar, {\n      clickToCreate: false,\n      dragToCreate: false,\n      dragToMove: false,\n      dragToResize: false,\n      eventDelete: false,\n      data: myEvents,\n      view: myView,\n      onEventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      message: toastMessage,\n      isOpen: isToastOpen,\n      onClose: handleToastClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"t79NgAgMYDCf9W0p8VjrUU98bqQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calendar","Eventcalendar","getJson","setOptions","Toast","useCallback","useEffect","useMemo","useState","theme","themeVariant","App","myEvents","setEvents","isToastOpen","setToastOpen","toastMessage","setToastMessage","myView","calendar","type","agenda","handleToastClose","handleEventClick","args","event","title","events"],"sources":["/Users/ashishmaurya/Downloads/reactjs-Fullcalendar-main/src/App.js"],"sourcesContent":["import { Calendar } from '@fullcalendar/core';\nimport { Eventcalendar, getJson, setOptions, Toast } from '@mobiscroll/react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nsetOptions({\n  theme: 'ios',\n  themeVariant: 'light'\n});\n\nfunction App() {\n  const [myEvents, setEvents] = useState([]);\n  const [isToastOpen, setToastOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState();\n\n  const myView = useMemo(\n    () => ({\n      calendar: { type: 'month' },\n      agenda: { type: 'month' },\n    }),\n    [],\n  );\n\n  const handleToastClose = useCallback(() => {\n    setToastOpen(false);\n  }, []);\n\n  const handleEventClick = useCallback((args) => {\n    setToastMessage(args.event.title);\n    setToastOpen(true);\n  }, []);\n\n  useEffect(() => {\n    getJson(\n      'https://trial.mobiscroll.com/events/?vers=5',\n      (events) => {\n        setEvents(events);\n      },\n      'jsonp',\n    );\n  }, []);\n\n  return (\n    <>\n      <Eventcalendar\n        clickToCreate={false}\n        dragToCreate={false}\n        dragToMove={false}\n        dragToResize={false}\n        eventDelete={false}\n        data={myEvents}\n        view={myView}\n        onEventClick={handleEventClick}\n      />\n      <Calendar />\n      <Toast message={toastMessage} isOpen={isToastOpen} onClose={handleToastClose} />\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,EAAEC,OAAO,EAAEC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AAC7E,SAASC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAElEL,UAAU,CAAC;EACTM,KAAK,EAAE,KAAK;EACZC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,WAAW,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,EAAE;EAElD,MAAMU,MAAM,GAAGX,OAAO,CACpB,OAAO;IACLY,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAQ,CAAC;IAC3BC,MAAM,EAAE;MAAED,IAAI,EAAE;IAAQ;EAC1B,CAAC,CAAC,EACF,EAAE,CACH;EAED,MAAME,gBAAgB,GAAGjB,WAAW,CAAC,MAAM;IACzCU,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAGlB,WAAW,CAAEmB,IAAI,IAAK;IAC7CP,eAAe,CAACO,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;IACjCX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACdJ,OAAO,CACL,6CAA6C,EAC5CyB,MAAM,IAAK;MACVd,SAAS,CAACc,MAAM,CAAC;IACnB,CAAC,EACD,OAAO,CACR;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE,QAAC,aAAa;MACZ,aAAa,EAAE,KAAM;MACrB,YAAY,EAAE,KAAM;MACpB,UAAU,EAAE,KAAM;MAClB,YAAY,EAAE,KAAM;MACpB,WAAW,EAAE,KAAM;MACnB,IAAI,EAAEf,QAAS;MACf,IAAI,EAAEM,MAAO;MACb,YAAY,EAAEK;IAAiB;MAAA;MAAA;MAAA;IAAA,QAC/B,eACF,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACZ,QAAC,KAAK;MAAC,OAAO,EAAEP,YAAa;MAAC,MAAM,EAAEF,WAAY;MAAC,OAAO,EAAEQ;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAC/E;AAEP;AAAC,GAhDQX,GAAG;AAAA,KAAHA,GAAG;AAkDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}