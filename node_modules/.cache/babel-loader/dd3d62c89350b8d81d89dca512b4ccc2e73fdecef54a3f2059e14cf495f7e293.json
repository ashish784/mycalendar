{"ast":null,"code":"var _jsxFileName = \"/Users/ashishmaurya/Downloads/reactjs-Fullcalendar-main/src/components/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEventButton = styled.button`\n  margin: 10px;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n_c = AddEventButton;\nconst Modal = styled.div`\n  display: ${_ref => {\n  let {\n    isOpen\n  } = _ref;\n  return isOpen ? \"block\" : \"none\";\n}};\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n`;\n_c2 = Modal;\nconst Overlay = styled.div`\n  display: ${_ref2 => {\n  let {\n    isOpen\n  } = _ref2;\n  return isOpen ? \"block\" : \"none\";\n}};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n`;\n_c3 = Overlay;\nconst Input = styled.input`\n  display: block;\n  margin-bottom: 10px;\n  padding: 8px;\n  width: 100%;\n`;\n_c4 = Input;\nfunction Calendar() {\n  _s();\n  const [events, setEvents] = useState([{\n    title: \"The title\",\n    start: \"2024-08-18T08:00:00\",\n    end: \"2024-08-19T09:00:00\"\n  }]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newEvent, setNewEvent] = useState({\n    title: \"\",\n    start: \"\",\n    end: \"\"\n  });\n  const handleDateClick = arg => {\n    setNewEvent({\n      ...newEvent,\n      start: arg.dateStr,\n      end: arg.dateStr\n    });\n    setModalOpen(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEvent({\n      ...newEvent,\n      [name]: value\n    });\n  };\n  const handleAddEvent = () => {\n    setEvents([...events, newEvent]);\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddEventButton, {\n      onClick: () => setModalOpen(true),\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      isOpen: modalOpen,\n      onClick: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Event Title\",\n        value: newEvent.title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"datetime-local\",\n        name: \"start\",\n        placeholder: \"Start Date\",\n        value: newEvent.start,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"datetime-local\",\n        name: \"end\",\n        placeholder: \"End Date\",\n        value: newEvent.end,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      headerToolbar: {\n        start: \"today prev,next\",\n        center: \"title\",\n        end: \"dayGridMonth,timeGridWeek,timeGridDay\"\n      },\n      height: \"90vh\",\n      events: events,\n      dateClick: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"TZ74YVL3dLHQ7TfCSjM2eMX4ULM=\");\n_c5 = Calendar;\nexport default Calendar;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AddEventButton\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"Overlay\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Calendar\");","map":{"version":3,"names":["React","useState","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","styled","AddEventButton","button","Modal","div","isOpen","Overlay","Input","input","Calendar","events","setEvents","title","start","end","modalOpen","setModalOpen","newEvent","setNewEvent","handleDateClick","arg","dateStr","handleInputChange","e","name","value","target","handleAddEvent","center"],"sources":["/Users/ashishmaurya/Downloads/reactjs-Fullcalendar-main/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddEventButton = styled.button`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  display: ${({ isOpen }) => (isOpen ? \"block\" : \"none\")};\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  display: ${({ isOpen }) => (isOpen ? \"block\" : \"none\")};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 999;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  width: 100%;\r\n`;\r\n\r\nfunction Calendar() {\r\n  const [events, setEvents] = useState([{\r\n    title: \"The title\",\r\n    start: \"2024-08-18T08:00:00\",\r\n    end: \"2024-08-19T09:00:00\",\r\n  }]);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [newEvent, setNewEvent] = useState({\r\n    title: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n  });\r\n\r\n  const handleDateClick = (arg) => {\r\n    setNewEvent({ ...newEvent, start: arg.dateStr, end: arg.dateStr });\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewEvent({ ...newEvent, [name]: value });\r\n  };\r\n\r\n  const handleAddEvent = () => {\r\n    setEvents([...events, newEvent]);\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddEventButton onClick={() => setModalOpen(true)}>Add Event</AddEventButton>\r\n\r\n      <Overlay isOpen={modalOpen} onClick={() => setModalOpen(false)} />\r\n      <Modal isOpen={modalOpen}>\r\n        <h2>Add Event</h2>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Event Title\"\r\n          value={newEvent.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Input\r\n          type=\"datetime-local\"\r\n          name=\"start\"\r\n          placeholder=\"Start Date\"\r\n          value={newEvent.start}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Input\r\n          type=\"datetime-local\"\r\n          name=\"end\"\r\n          placeholder=\"End Date\"\r\n          value={newEvent.end}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleAddEvent}>Add Event</button>\r\n      </Modal>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n        initialView={\"dayGridMonth\"}\r\n        headerToolbar={{\r\n          start: \"today prev,next\",\r\n          center: \"title\",\r\n          end: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n        }}\r\n        height={\"90vh\"}\r\n        events={events}\r\n        dateClick={handleDateClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}